import{_ as p,V as i,W as c,X as n,$ as a,a0 as l,Y as s,Z as u,F as o}from"./framework-d1125686.js";const r={},d=n("h1",{id:"基本说明",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#基本说明","aria-hidden":"true"},"#"),s(" 基本说明")],-1),k=n("h2",{id:"官方插件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#官方插件","aria-hidden":"true"},"#"),s(" 官方插件")],-1),m=n("p",null,"lunisolar内置了一些插件，包括以下这些： 具体请参看对应插件的文档",-1),v=n("thead",null,[n("tr",null,[n("th",null,"插件"),n("th",null,"介绍"),n("th",null,"文档"),n("th",null,"项目仓库")])],-1),h=n("td",null,"fetalGod",-1),b=n("td",null,"胎神占方",-1),_={href:"https://github.com/lunisolar-js/plugin-fetalgod",target:"_blank",rel:"noopener noreferrer"},g=n("td",null,"takeSound",-1),f=n("td",null,"五行纳音",-1),y={href:"https://github.com/lunisolar-js/plugin-takesound",target:"_blank",rel:"noopener noreferrer"},w=n("td",null,"theGods",-1),x=n("td",null,"神煞宜忌",-1),E={href:"https://github.com/lunisolar-js/plugin-thegods",target:"_blank",rel:"noopener noreferrer"},L=n("td",null,"char8ex",-1),G=n("td",null,"八字增强",-1),N={href:"https://github.com/lunisolar-js/plugin-char8ex",target:"_blank",rel:"noopener noreferrer"},P=u(`<h2 id="自定义插件" tabindex="-1"><a class="header-anchor" href="#自定义插件" aria-hidden="true">#</a> 自定义插件</h2><p>1 编写一个插件</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> PluginFunc<span class="token punctuation">,</span> Lunisolar <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lunisolar&#39;</span>

<span class="token comment">// 为新添的属性加上类型声明 ()</span>
<span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">&#39;lunisolar&#39;</span> <span class="token punctuation">{</span>
  <span class="token keyword">interface</span> <span class="token class-name">Lunisolar</span> <span class="token punctuation">{</span>
    showExample<span class="token operator">:</span> <span class="token builtin">string</span>
    <span class="token function">exampleMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">LunisolarEx</span> <span class="token keyword">extends</span> <span class="token class-name">Lunisolar</span> <span class="token punctuation">{</span>
  showExample<span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token function">exampleMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> pluginName<span class="token operator">:</span> <span class="token function-variable function">PluginFunc</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>options<span class="token punctuation">,</span> lsClass<span class="token punctuation">,</span> lsFactory<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> lsProto <span class="token operator">=</span> lsClass<span class="token punctuation">.</span>prototype <span class="token keyword">as</span> <span class="token builtin">unknown</span> <span class="token keyword">as</span> LunisolarEx
  <span class="token comment">// 添加属性</span>
  lsProto<span class="token punctuation">.</span>showExample <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>

  <span class="token comment">// 添加方法</span>
  lsProto<span class="token punctuation">.</span><span class="token function-variable function">exampleMethod</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> pluginName
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2 使用插件</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> plugin <span class="token keyword">from</span> <span class="token string">&#39;your/plugin/path/pluginName&#39;</span>
<span class="token keyword">import</span> lunisolar <span class="token keyword">from</span> <span class="token string">&#39;lunisolar&#39;</span>

lunisolar<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>plugin<span class="token punctuation">)</span>

<span class="token function">lunisolar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>showExample <span class="token comment">// &#39;hello&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function V(j,C){const e=o("RouterLink"),t=o("ExternalLinkIcon");return i(),c("div",null,[d,k,m,n("table",null,[v,n("tbody",null,[n("tr",null,[h,b,n("td",null,[a(e,{to:"/guide/plugins/fetalGod.html"},{default:l(()=>[s("文档")]),_:1})]),n("td",null,[n("a",_,[s("GitHub"),a(t)])])]),n("tr",null,[g,f,n("td",null,[a(e,{to:"/guide/plugins/takeSound.html"},{default:l(()=>[s("文档")]),_:1})]),n("td",null,[n("a",y,[s("GitHub"),a(t)])])]),n("tr",null,[w,x,n("td",null,[a(e,{to:"/guide/plugins/theGods.html"},{default:l(()=>[s("文档")]),_:1})]),n("td",null,[n("a",E,[s("GitHub"),a(t)])])]),n("tr",null,[L,G,n("td",null,[a(e,{to:"/guide/plugins/char8ex.html"},{default:l(()=>[s("文档")]),_:1})]),n("td",null,[n("a",N,[s("GitHub"),a(t)])])])])]),P])}const H=p(r,[["render",V],["__file","about.html.vue"]]);export{H as default};
