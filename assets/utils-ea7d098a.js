import{e}from"./lunisolar.esm-44decc4d.js";import{z as o}from"./zh-65f6291b.js";const M=(t,r,n,a=!1)=>{const s=n-r+1,h=new Array(s);for(let i=0;i<s;i++){const c=a?(t+s-i)%s:(t+s+i)%s;h[i]=c}return h},p=t=>[8,10,0,2,4,6].map(n=>(n+t)%12),f=(t="zh")=>{const r={lang:t};return[e.Branch.create(0,r),e.Stem.create(9,r),e.Branch.create(1,r),e.Trigram8.create(4,r),e.Branch.create(2,r),e.Stem.create(0,r),e.Branch.create(3,r),e.Stem.create(1,r),e.Branch.create(4,r),e.Trigram8.create(6,r),e.Branch.create(5,r),e.Stem.create(2,r),e.Branch.create(6,r),e.Stem.create(3,r),e.Branch.create(7,r),e.Trigram8.create(0,r),e.Branch.create(8,r),e.Stem.create(6,r),e.Branch.create(9,r),e.Stem.create(7,r),e.Branch.create(10,r),e.Trigram8.create(7,r),e.Branch.create(11,r),e.Stem.create(8,r)]},g=t=>[0,22,20,18,16,14,12,10,8,6,4,2][t],w=(t,r="zh")=>{const n=g(t),a=(n+12)%24,s=f(r),h={stem:[],branch:[]},i={stem:[],branch:[]};for(let c=0;c<24;c++){if(c===n||c===a)continue;const m=s[c];n>a&&c<n&&c>a||n<a&&(0<=c&&c<n||a<c&&c<=23)?(m instanceof e.Stem&&i.stem.push(m),m instanceof e.Branch&&i.branch.push(m)):(m instanceof e.Stem&&h.stem.push(m),m instanceof e.Branch&&h.branch.push(m))}return[i,h]},N=t=>{const r=(t-2)%12;return Math.floor(r/3)},z=(t,r)=>{if((t+r)%2!==0)throw new Error("Invalid SB value");return t%10+(6-(r>>1)+(t>>1))%6*10},u=new Map;function B(t){if(u.has(t))return u.get(t);let r=[];return t==="stem"?r=[...o.stems]:t==="branch"?r=[...o.branchs]:t==="season"?r=[...o.seasonName]:t==="month"?r=[...o.lunarMonths]:t==="term1"?r=new Array(12).fill(0).map((n,a)=>o.solarTerm[(a*2-1+24)%24]):t==="sb"?r=new Array(60).fill(0).map((n,a)=>{const s=o.stems[a%10],h=o.branchs[a%12];return`${s}${h}`}):t==="Trigram8"?r=[...o.eightTrigram]:t==="direction24"?r=f("zh").map(n=>n.name):t==="day"?r=[...o.lunarDays]:t==="branchMonth"&&(r=[...o.lunarMonths.slice(10,12),...o.lunarMonths.slice(0,10)]),u.set(t,r),r}function l(t,r){const n=B(r);return t===null?"":typeof t=="number"||typeof t=="string"&&!Number.isNaN(Number(t))?n[t]:typeof t=="string"?t:t.map(s=>l(s,r))}export{l as a,p as b,M as c,w as d,z as e,N as f,B as g};
