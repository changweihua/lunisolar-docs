import{_ as o,V as e,W as s,X as l,$ as u,a0 as d,Y as t,F as r}from"./framework-54e49b68.js";const a={},_=l("h1",{id:"lunisolar类",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#lunisolar类","aria-hidden":"true"},"#"),t(" Lunisolar类")],-1),i=l("thead",null,[l("tr",null,[l("th",null,"属性或方法"),l("th",null,"描述"),l("th",null,"参数"),l("th",null,"返回类型")])],-1),h=l("td",null,"lunar",-1),c=l("td",null,"阴历数据对象",-1),m=l("td",null,null,-1),b=l("td",null,"char8",-1),f=l("td",null,"八字对象",-1),g=l("td",null,null,-1),p=l("td",null,"solarTerm",-1),x=l("td",null,"返回当前日期的节气对象，如果不是节气，返回null",-1),D=l("td",null,null,-1),L=l("tr",null,[l("td",null,"getSeason()"),l("td",null,"取得当前季节"),l("td"),l("td",null,"string")],-1),S=l("tr",null,[l("td",null,"getSeasonIndex()"),l("td",null,"以春夏秋冬为顺序取得当前季节索引"),l("td"),l("td",null,"number")],-1),C=l("tr",null,[l("td",null,"toDate()"),l("td",null,"返回Date对象"),l("td"),l("td",null,"Date")],-1),T=l("tr",null,[l("td",null,"clone()"),l("td",null,"克隆当前Lunisolar对象"),l("td"),l("td",null,"Lunisolar")],-1),Y=l("tr",null,[l("td",null,"unix()"),l("td",null,"返回以秒为单位的时间戳"),l("td"),l("td",null,"number")],-1),k=l("tr",null,[l("td",null,"format(formatStr: string)"),l("td",null,"按指定格式格式化时间"),l("td",null,[l("strong",null,"formatStr"),t(": string 时间将以这字符串格式进行格式化，例 'YYYY-MM-DD HH:mm:ss'")]),l("td",null,"string")],-1),v=l("tr",null,[l("td",null,"diff(date, unit, float)"),l("td",null,"时间差计算"),l("td",null,[l("strong",null,"date"),t(": number | string | Date | Lunisolar "),l("br"),t(" 与当前实例的时间进行比较的时间"),l("br"),t(),l("strong",null,"unit"),t(": string "),l("br"),t("单位，如 year, lunarYear, month, lunarMonth 等"),l("br"),t(),l("strong",null,"float"),t(": boolean "),l("br"),t("是否返回浮点数")]),l("td",null,"number")],-1),y=l("tr",null,[l("td",null,"year"),l("td",null,"年份"),l("td"),l("td",null,"number")],-1),M=l("tr",null,[l("td",null,"month"),l("td",null,"月份 1 ~ 12"),l("td"),l("td",null,"number")],-1),V=l("tr",null,[l("td",null,"day"),l("td",null,"日期 1 ~ 31"),l("td"),l("td",null,"number")],-1),B=l("tr",null,[l("td",null,"dayOfWeek"),l("td",null,"周几，0 ~ 6， 0代表周日"),l("td"),l("td",null,"number")],-1),N=l("tr",null,[l("td",null,"hour"),l("td",null,"小时 0 ~ 23"),l("td"),l("td",null,"number")],-1),O=l("tr",null,[l("td",null,"minute"),l("td",null,"分 0 ~ 59"),l("td"),l("td",null,"number")],-1),W=l("tr",null,[l("td",null,"second"),l("td",null,"秒 0 ~ 59"),l("td"),l("td",null,"number")],-1),H=l("tr",null,[l("td",null,"millis"),l("td",null,"毫秒 0 ~ 999"),l("td"),l("td",null,"number")],-1),R=l("tr",null,[l("td",null,"valueOf()"),l("td",null,"返回Date对象的valueOf(), 即时间戳"),l("td"),l("td",null,"number")],-1),w=l("tr",null,[l("td",null,"toString()"),l("td",null,"返回当前 Date对象的toUTCString() + 阴历的格式化后的日期时间: 例“Wed, 24 Aug 2022 14:50:51 GMT (二〇二二年七月廿七亥時)”"),l("td"),l("td",null,"string")],-1);function A(E,F){const n=r("RouterLink");return e(),s("div",null,[_,l("table",null,[i,l("tbody",null,[l("tr",null,[h,c,m,l("td",null,[u(n,{to:"/api/lunar.html"},{default:d(()=>[t("Lunar")]),_:1})])]),l("tr",null,[b,f,g,l("td",null,[u(n,{to:"/api/char8.html"},{default:d(()=>[t("Char8")]),_:1})])]),l("tr",null,[p,x,D,l("td",null,[u(n,{to:"/api/solarTerm.html"},{default:d(()=>[t("SolarTerm")]),_:1}),t(" | null")])]),L,S,C,T,Y,k,v,y,M,V,B,N,O,W,H,R,w])])])}const I=o(a,[["render",A],["__file","lunisolarClass.html.vue"]]);export{I as default};
